package ch.trick17.gradingserver.service;

import ch.trick17.gradingserver.DBObjectMapperSupplier;
import ch.trick17.gradingserver.model.*;
import ch.trick17.gradingserver.model.GradingOptions.Compiler;
import ch.trick17.jtt.testsuitegrader.TestSuiteGrader;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.ActiveProfiles;

import java.time.Duration;
import java.util.List;

import static ch.trick17.gradingserver.model.ProblemSet.DisplaySetting.WITH_SHORTENED_NAMES;
import static ch.trick17.gradingserver.model.ProjectConfig.ProjectStructure.ECLIPSE;
import static ch.trick17.gradingserver.model.ProjectConfig.ProjectStructure.MAVEN;
import static java.time.ZonedDateTime.now;
import static java.util.Collections.emptyList;
import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.params.provider.Arguments.arguments;

@SpringBootTest
@ActiveProfiles("test")
class GradingServiceTest {

    @Autowired GradingService service;
    @Autowired SubmissionRepository submissionRepo;
    @Autowired AuthorRepository authorRepo;
    @Autowired UserRepository userRepo;

    Course course = new Course("OOPI2", new Term(2021, "FS"), "");
    GradingOptions options = new GradingOptions(Compiler.ECLIPSE, 7,
            Duration.ofSeconds(5), Duration.ofSeconds(10), true);

    User user = new User("user", "password", "User");
    // read-only token from dummy user
    AccessToken token = new AccessToken(user, "https://gitlab.com", "glpat-pzyGzruzoVgEnQQPosZB");

    @DirtiesContext
    @ParameterizedTest
    @MethodSource
    void grade(String projectRoot, String commitHash) throws Exception {
        var test = """
                package gui;
                import org.junit.jupiter.api.Test;
                import static org.junit.jupiter.api.Assertions.assertEquals;
                class ColorTest {
                    @Test
                    void testToRgbInt() {
                        assertEquals(0xFF8532, new Color(0xFF, 0x85, 0x32).toRgbInt());
                    }
                }""";
        var projectConfig = new ProjectConfig(projectRoot, MAVEN, null, emptyList());
        var gradingConfig = new ImplGradingConfig(test, options);
        var problemSet = new ProblemSet(course, "Test", projectConfig, gradingConfig,
                now(), WITH_SHORTENED_NAMES);

        var solution = new Solution(problemSet, "https://github.com/rolve/gui.git",
                "master", null, emptyList(), emptyList());
        var submission = new Submission(solution, commitHash, now());
        submissionRepo.save(submission);

        service.grade(submission).get();

        var result = assertInstanceOf(ImplGradingResult.class, submission.getResult());
        assertTrue(result.properties().contains("compiled"));
        assertEquals(List.of("testToRgbInt"), result.passedTests());
        assertEquals(emptyList(), result.failedTests());
    }

    static List<Arguments> grade() {
        return List.of(
                arguments("", "7f9225c2e7b20cb1ff51b0220687c75305341392"),
                arguments("gui", "082bfad2c587a14c140cb1e1eba54670654d4880"));
    }

    @DirtiesContext
    @Test
    void gradePrivateRepo() throws Exception {
        userRepo.save(user);

        var test = """
                package foo;
                import org.junit.jupiter.api.Test;
                import static org.junit.jupiter.api.Assertions.assertEquals;
                class FooTest {
                    @Test
                    void testAdd() {
                        assertEquals(3, Foo.add(1, 2));
                    }
                }""";
        var projectConfig = new ProjectConfig("", ECLIPSE, null, emptyList());
        var gradingConfig = new ImplGradingConfig(test, options);
        var problemSet = new ProblemSet(course, "Test", projectConfig, gradingConfig,
                now(), WITH_SHORTENED_NAMES);
        var solution = new Solution(problemSet, "https://gitlab.com/rolve/some-private-repo.git",
                "master", token, emptyList(), emptyList());
        var submission = new Submission(solution, "5f5ffff42176fc05bd3947ad2971712fb409ae9b", now());
        submissionRepo.save(submission);

        service.grade(submission).get();

        var result = assertInstanceOf(ImplGradingResult.class, submission.getResult());
        assertEquals(List.of("compiled"), result.properties());
        assertEquals(List.of("testAdd"), result.passedTests());
        assertEquals(emptyList(), result.failedTests());
    }

    @DirtiesContext
    @Test
    void gradePrivateRepoMissingCredentials() throws Exception {
        var test = """
                package foo;
                import org.junit.jupiter.api.Test;
                import static org.junit.jupiter.api.Assertions.assertEquals;
                class FooTest {
                    @Test
                    void testAdd() {
                        assertEquals(3, Foo.add(1, 2));
                    }
                }""";
        var projectConfig = new ProjectConfig("", ECLIPSE, null, emptyList());
        var gradingConfig = new ImplGradingConfig(test, options);
        var problemSet = new ProblemSet(course, "Test", projectConfig, gradingConfig,
                now(), WITH_SHORTENED_NAMES);
        AccessToken missingToken = null;
        var solution = new Solution(problemSet, "https://gitlab.com/rolve/some-private-repo.git",
                "master", missingToken, emptyList(), emptyList());
        var submission = new Submission(solution, "5f5ffff42176fc05bd3947ad2971712fb409ae9b", now());
        submissionRepo.save(submission);

        service.grade(submission).get();

        var result = assertInstanceOf(ErrorResult.class, submission.getResult());
        assertNotNull(result.error());
        assertTrue(result.error().toLowerCase()
                .matches(".*ioexception.*not.*authorized.*"));
    }

    @DirtiesContext
    @Test
    void gradeTestSuite() throws Exception {
        userRepo.save(user);

        var taskJson = """
                {"refImplementations":[[{"className":"io.IOTasks","content":"yv66vgAAAD0AzwoAAgADBwAEDAAFAAYBABBqYXZhL2xhbmcvT2JqZWN0AQAGPGluaXQ+AQADKClWBwAIAQATamF2YS91dGlsL0FycmF5TGlzdAoABwADCgALAAwHAA0MAA4ADwEADmphdmEvbGFuZy9NYXRoAQAGcmFuZG9tAQADKClECQARABIHABMMABQAFQEAIWphdmEvbmlvL2NoYXJzZXQvU3RhbmRhcmRDaGFyc2V0cwEACklTT184ODU5XzEBABpMamF2YS9uaW8vY2hhcnNldC9DaGFyc2V0OwkAEQAXDAAYABUBAAVVVEZfOAcAGgEAFmphdmEvaW8vQnVmZmVyZWRSZWFkZXIHABwBABlqYXZhL2lvL0lucHV0U3RyZWFtUmVhZGVyCgAbAB4MAAUAHwEAMihMamF2YS9pby9JbnB1dFN0cmVhbTtMamF2YS9uaW8vY2hhcnNldC9DaGFyc2V0OylWCgAZACEMAAUAIgEAEyhMamF2YS9pby9SZWFkZXI7KVYKABkAJAwAJQAmAQAIcmVhZExpbmUBABQoKUxqYXZhL2xhbmcvU3RyaW5nOwoABwAoDAApACoBAARzaXplAQADKClJCgAsAC0HAC4MAC8AMAEAEGphdmEvbGFuZy9TdHJpbmcBAAdpc0VtcHR5AQADKClaCgAHADIMADMANAEAA2FkZAEAFShMamF2YS9sYW5nL09iamVjdDspWgoAGQA2DAA3AAYBAAVjbG9zZQcAOQEAE2phdmEvbGFuZy9UaHJvd2FibGUKADgAOwwAPAA9AQANYWRkU3VwcHJlc3NlZAEAGChMamF2YS9sYW5nL1Rocm93YWJsZTspVgcAPwEAFmphdmEvaW8vQnVmZmVyZWRXcml0ZXIHAEEBABpqYXZhL2lvL091dHB1dFN0cmVhbVdyaXRlcgoAQABDDAAFAEQBADMoTGphdmEvaW8vT3V0cHV0U3RyZWFtO0xqYXZhL25pby9jaGFyc2V0L0NoYXJzZXQ7KVYKAD4ARgwABQBHAQATKExqYXZhL2lvL1dyaXRlcjspVhIAAABJDABKAEsBABdtYWtlQ29uY2F0V2l0aENvbnN0YW50cwEAFShJKUxqYXZhL2xhbmcvU3RyaW5nOwoAPgBNDABOAE8BAAV3cml0ZQEAFShMamF2YS9sYW5nL1N0cmluZzspVgoAPgBRDABSAAYBAAVmbHVzaAoAPgA2BwBVAQARamF2YS91dGlsL1NjYW5uZXIKAFQAHgoAVABYDABZADABAAdoYXNOZXh0CABbAQAIXGQrXC5cZCsKAFQAXQwAWQBeAQAVKExqYXZhL2xhbmcvU3RyaW5nOylaCgBUAGAMAGEADwEACm5leHREb3VibGUKAGMAZAcAZQwAZgBnAQAQamF2YS9sYW5nL0RvdWJsZQEAB3ZhbHVlT2YBABUoRClMamF2YS9sYW5nL0RvdWJsZTsKAFQAaQwAagAwAQAKaGFzTmV4dEludAoAVABsDABtACoBAAduZXh0SW50CgBUAG8MAHAAMAEADWhhc05leHREb3VibGUKAFQAcgwAcwAmAQAEbmV4dAoAVAA2CgAZAHYMAHcAeAEABWxpbmVzAQAbKClMamF2YS91dGlsL3N0cmVhbS9TdHJlYW07CwB6AHsHAHwMAH0AfgEAF2phdmEvdXRpbC9zdHJlYW0vU3RyZWFtAQAEc2tpcAEAHChKKUxqYXZhL3V0aWwvc3RyZWFtL1N0cmVhbTsLAHoAgAwAgQCCAQAGdG9MaXN0AQASKClMamF2YS91dGlsL0xpc3Q7CwCEAIUHAIYMAIcAiAEADmphdmEvdXRpbC9MaXN0AQAIaXRlcmF0b3IBABYoKUxqYXZhL3V0aWwvSXRlcmF0b3I7CwCKAFgHAIsBABJqYXZhL3V0aWwvSXRlcmF0b3ILAIoAjQwAcwCOAQAUKClMamF2YS9sYW5nL09iamVjdDsIAJABAAE7CgAsAJIMAJMAlAEABXNwbGl0AQAnKExqYXZhL2xhbmcvU3RyaW5nOylbTGphdmEvbGFuZy9TdHJpbmc7CgCWAJcHAJgMAJkAmgEAEWphdmEvbGFuZy9JbnRlZ2VyAQAIcGFyc2VJbnQBABUoTGphdmEvbGFuZy9TdHJpbmc7KUkIAJwBAAExCgAsAJ4MAJ8ANAEABmVxdWFscwcAoQEACWlvL1BlcnNvbgoAoACjDAAFAKQBABcoTGphdmEvbGFuZy9TdHJpbmc7SVopVgcApgEACmlvL0lPVGFza3MBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASZmlyc3ROb25FbXB0eUxpbmVzAQAoKExqYXZhL2lvL0lucHV0U3RyZWFtO0kpTGphdmEvdXRpbC9MaXN0OwEADVN0YWNrTWFwVGFibGUHAK0BABhqYXZhL25pby9jaGFyc2V0L0NoYXJzZXQHAK8BABNqYXZhL2lvL0lucHV0U3RyZWFtAQAKRXhjZXB0aW9ucwcAsgEAE2phdmEvaW8vSU9FeGNlcHRpb24BAAlTaWduYXR1cmUBADwoTGphdmEvaW8vSW5wdXRTdHJlYW07SSlMamF2YS91dGlsL0xpc3Q8TGphdmEvbGFuZy9TdHJpbmc7PjsBABB3cml0ZVBvd2Vyc09mVHdvAQAaKExqYXZhL2lvL091dHB1dFN0cmVhbTtJKVYHALgBABRqYXZhL2lvL091dHB1dFN0cmVhbQEADmV4dHJhY3ROdW1iZXJzAQAnKExqYXZhL2lvL0lucHV0U3RyZWFtOylMamF2YS91dGlsL0xpc3Q7AQA7KExqYXZhL2lvL0lucHV0U3RyZWFtOylMamF2YS91dGlsL0xpc3Q8TGphdmEvbGFuZy9Eb3VibGU7PjsBABFyZWFkUGVvcGxlRnJvbUNzdgEANChMamF2YS9pby9JbnB1dFN0cmVhbTspTGphdmEvdXRpbC9MaXN0PExpby9QZXJzb247PjsBAApTb3VyY2VGaWxlAQAMSU9UYXNrcy5qYXZhAQAQQm9vdHN0cmFwTWV0aG9kcw8GAMIKAMMAxAcAxQwASgDGAQAkamF2YS9sYW5nL2ludm9rZS9TdHJpbmdDb25jYXRGYWN0b3J5AQCYKExqYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMkTG9va3VwO0xqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvaW52b2tlL01ldGhvZFR5cGU7TGphdmEvbGFuZy9TdHJpbmc7W0xqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL2ludm9rZS9DYWxsU2l0ZTsIAMgBAAIBCgEADElubmVyQ2xhc3NlcwcAywEAJWphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXAHAM0BAB5qYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMBAAZMb29rdXAAIQClAAIAAAAAAAUAAQAFAAYAAQCnAAAAHQABAAEAAAAFKrcAAbEAAAABAKgAAAAGAAEAAAANAAkAqQCqAAMApwAAAQ0ABgAHAAAAebsAB1m3AAlNuAAKDpebAAmyABCnAAayABZOuwAZWbsAG1kqLbcAHbcAIDoEGQS2ACM6BRkFxgAkLLYAJxuiABwZBbYAK5oACiwZBbYAMVcZBLYAIzoFp//dGQS2ADWnABk6BRkEtgA1pwAMOgYZBRkGtgA6GQW/LLAAAgAsAFkAYQA4AGMAaABrADgAAgCoAAAALgALAAAAFgAIABcAGgAYACwAGQAzABoAQAAbAEgAHABPAB4AWQAgAGEAGAB3ACEAqwAAAD4ACfwAFgcAB0IHAKz+ABkHAKwHABkHACwb+gAJRwcAOP8ACQAGBwCuAQcABwcArAcAGQcAOAABBwA4CPkAAgCwAAAABAABALEAswAAAAIAtAAJALUAtgACAKcAAADLAAYABQAAAFC7AD5ZuwBAWSqyABa3AEK3AEVNBD4ENgQVBBujABssHboASAAAtgBMLLYAUB0FaD6EBAGn/+UstgBTpwAVTiy2AFOnAAs6BC0ZBLYAOi2/sQACABMANgA9ADgAPgBCAEUAOAACAKgAAAAqAAoAAAArABMALAAVAC0AHgAuACgALwAsADEAMAAtADYAMwA9ACsATwA0AKsAAAApAAb+ABgHAD4BAfkAHUYHADj/AAcABAcAtwEHAD4HADgAAQcAOAf5AAEAsAAAAAQAAQCxAAkAuQC6AAMApwAAARUABAAEAAAAgLsAVFkqsgAWtwBWTLsAB1m3AAlNK7YAV5kAUCsSWrYAXJkAEiwrtgBfuABitgAxV6f/5Cu2AGiZABMsK7YAa4e4AGK2ADFXp//NK7YAbpkAEiwrtgBfuABitgAxV6f/tyu2AHFXp/+vLE4rtgB0LbBNK7YAdKcACU4sLbYAOiy/AAIADABqAHAAOABxAHUAeAA4AAIAqAAAADoADgAAAEEADABCABQAQwAbAEQAJABGADMARwA6AEkASgBKAFEASwBgAE0AaABQAGoAUQBuAFAAcABBAKsAAAAzAAj9ABQHAFQHAAceFhUH/wAHAAIHAK4HAFQAAQcAOP8ABwADBwCuBwBUBwA4AAEHADgFALAAAAAEAAEAsQCzAAAAAgC7AAkAvAC6AAMApwAAAWIABgALAAAAr7gACg6XmwAJsgAWpwAGsgAQTLsAGVm7ABtZKiu3AB23ACBNuwAHWbcACU4stgB1CrkAeQMAuQB/AQA6BBkEuQCDAQA6BRkFuQCJAQCZAEcZBbkAjAEAwAAsOgYZBhKPtgCROgcZBwMyOggZBwQyuACVNgkZBwUyEpu2AJ02Ci27AKBZGQgVCRUKtwCitgAxV6f/tS06BSy2ADUZBbBOLLYANacACzoELRkEtgA6Lb8AAgAjAJYAnQA4AJ4AogClADgAAgCoAAAAPgAPAAAAZAASAGUAIwBmACsAZwA8AGgAWwBpAGQAagBqAGsAcwBsAH4AbQCQAG4AkwBvAJYAcACaAG8AnQBlAKsAAABNAAcOQgcArP8AMwAGBwCuBwCsBwAZBwAHBwCEBwCKAAD6AE3/AAkAAwcArgcArAcAGQABBwA4/wAHAAQHAK4HAKwHABkHADgAAQcAOAcAsAAAAAQAAQCxALMAAAACAL0AAwC+AAAAAgC/AMAAAAAIAAEAwQABAMcAyQAAAAoAAQDKAMwAzgAZ"},{"className":"io.Person","content":"yv66vgAAAD0AKgoAAgADBwAEDAAFAAYBABBqYXZhL2xhbmcvT2JqZWN0AQAGPGluaXQ+AQADKClWCgAIAAkHAAoMAAsADAEAEWphdmEvdXRpbC9PYmplY3RzAQAOcmVxdWlyZU5vbk51bGwBACYoTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvT2JqZWN0OwcADgEAEGphdmEvbGFuZy9TdHJpbmcJABAAEQcAEgwAEwAUAQAJaW8vUGVyc29uAQAEbmFtZQEAEkxqYXZhL2xhbmcvU3RyaW5nOwcAFgEAImphdmEvbGFuZy9JbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24KABUAAwkAEAAZDAAaABsBAANhZ2UBAAFJCQAQAB0MAB4AHwEACHBvc2l0aXZlAQABWgEAFyhMamF2YS9sYW5nL1N0cmluZztJWilWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEADVN0YWNrTWFwVGFibGUBABQoKUxqYXZhL2xhbmcvU3RyaW5nOwEAAygpSQEAAygpWgEACG5lZ2F0aXZlAQAKU291cmNlRmlsZQEAC1BlcnNvbi5qYXZhACEAEAACAAAAAwASABMAFAAAABIAGgAbAAAAEgAeAB8AAAAFAAEABQAgAAEAIQAAAG0AAgAEAAAAJiq3AAEqK7gAB8AADbUADxycAAu7ABVZtwAXvyoctQAYKh21AByxAAAAAgAiAAAAHgAHAAAADQAEAA4ADwAPABMAEAAbABIAIAATACUAFAAjAAAAEQAB/wAbAAQHABAHAA0BAQAAAAEAEwAkAAEAIQAAAB0AAQABAAAABSq0AA+wAAAAAQAiAAAABgABAAAAFwABABoAJQABACEAAAAdAAEAAQAAAAUqtAAYrAAAAAEAIgAAAAYAAQAAABsAAQAeACYAAQAhAAAAHQABAAEAAAAFKrQAHKwAAAABACIAAAAGAAEAAAAfAAEAJwAmAAEAIQAAADAAAQABAAAADSq0AByaAAcEpwAEA6wAAAACACIAAAAGAAEAAAAjACMAAAAFAAILQAEAAQAoAAAAAgAp"}]],"mutations":[{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[39],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.MathMutator"},"weight":0.020833333333333332,"killers":["io.WritePowersOfTwoTest.testMore"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[79],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.010416666666666666,"killers":["io.ReadPeopleFromCsvTest.testPositive"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[5],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.005952380952380952,"killers":["io.FirstNonEmptyLinesTest.testZero","io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding","io.FirstNonEmptyLinesTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[6],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.013888888888888888,"killers":["io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[49],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[55],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.004629629629629629,"killers":["io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[6],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE"},"weight":0.013888888888888888,"killers":["io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[30],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"},"weight":0.006944444444444444,"killers":["io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"<init>","methodDesc":"(Ljava/lang/String;IZ)V"},"indexes":[11],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[49],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.020833333333333332,"killers":["io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[71],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.005952380952380952,"killers":["io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[7],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.010416666666666666,"killers":["io.ExtractNumbersTest.testEmptyText","io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[56],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.008333333333333333,"killers":["io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[50],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE"},"weight":0.004629629629629629,"killers":["io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[48],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"positive","methodDesc":"()Z"},"indexes":[5],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator"},"weight":0.010416666666666666,"killers":["io.ReadPeopleFromCsvTest.testPositive"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[76],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[43],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator"},"weight":0.006944444444444444,"killers":["io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore","io.WritePowersOfTwoTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[18],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator"},"weight":0.008333333333333333,"killers":["io.WritePowersOfTwoTest.testZero","io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[9],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.008333333333333333,"killers":["io.WritePowersOfTwoTest.testZero","io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore","io.WritePowersOfTwoTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"name","methodDesc":"()Ljava/lang/String;"},"indexes":[5],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[50],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF"},"weight":0.020833333333333332,"killers":["io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[12],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE"},"weight":0.013888888888888888,"killers":["io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[41],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.005952380952380952,"killers":["io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[38],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator"},"weight":0.020833333333333332,"killers":["io.WritePowersOfTwoTest.testMore"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[4],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator"},"weight":0.013888888888888888,"killers":["io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[29],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.005952380952380952,"killers":["io.FirstNonEmptyLinesTest.testZero","io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding","io.FirstNonEmptyLinesTest.testClose","io.FirstNonEmptyLinesTest.testCloseException"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[76],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"},"weight":0.041666666666666664,"killers":["io.FirstNonEmptyLinesTest.testCloseException"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[10],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator"},"weight":0.013888888888888888,"killers":["io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[37],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[45],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.005952380952380952,"killers":["io.FirstNonEmptyLinesTest.testZero","io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[13],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.010416666666666666,"killers":["io.ExtractNumbersTest.testEmptyText","io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[41],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF"},"weight":0.005952380952380952,"killers":["io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[48],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.006944444444444444,"killers":["io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"age","methodDesc":"()I"},"indexes":[5],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator"},"weight":0.013888888888888888,"killers":["io.ReadPeopleFromCsvTest.testAge"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[49],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"},"weight":0.041666666666666664,"killers":["io.WritePowersOfTwoTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[38],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"<init>","methodDesc":"(Ljava/lang/String;IZ)V"},"indexes":[15],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"<init>","methodDesc":"(Ljava/lang/String;IZ)V"},"indexes":[15],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[45],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF"},"weight":0.005952380952380952,"killers":["io.FirstNonEmptyLinesTest.testZero","io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[63],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.008333333333333333,"killers":["io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[12],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.013888888888888888,"killers":["io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[26],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF"},"weight":0.005952380952380952,"killers":["io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[19],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.006944444444444444,"killers":["io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[31],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.013888888888888888,"killers":["io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[69],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"<init>","methodDesc":"(Ljava/lang/String;IZ)V"},"indexes":[9],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[57],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF"},"weight":0.005952380952380952,"killers":["io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"<init>","methodDesc":"(Ljava/lang/String;IZ)V"},"indexes":[32],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator"},"weight":0.010416666666666666,"killers":["io.ReadPeopleFromCsvTest.testPositive"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[30],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.005952380952380952,"killers":["io.FirstNonEmptyLinesTest.testZero","io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding","io.FirstNonEmptyLinesTest.testClose","io.FirstNonEmptyLinesTest.testCloseException"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[89],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[41],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.004629629629629629,"killers":["io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[103],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"},"weight":0.041666666666666664,"killers":["io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[49],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.006944444444444444,"killers":["io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[43],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.004629629629629629,"killers":["io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[90],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[24],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.008333333333333333,"killers":["io.WritePowersOfTwoTest.testZero","io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[61],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.041666666666666664,"killers":["io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[20],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE"},"weight":0.006944444444444444,"killers":["io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[26],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.005952380952380952,"killers":["io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[45],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE"},"weight":0.004629629629629629,"killers":["io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[10],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.008333333333333333,"killers":["io.WritePowersOfTwoTest.testZero","io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore","io.WritePowersOfTwoTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[24],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE"},"weight":0.006944444444444444,"killers":["io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[46],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.006944444444444444,"killers":["io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[20],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF"},"weight":0.010416666666666666,"killers":["io.ExtractNumbersTest.testEmptyText","io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[64],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.008333333333333333,"killers":["io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[20],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.010416666666666666,"killers":["io.ExtractNumbersTest.testEmptyText","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[32],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.013888888888888888,"killers":["io.ExtractNumbersTest.testDoubles"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[33],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.013888888888888888,"killers":["io.ExtractNumbersTest.testDoubles"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[68],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"},"weight":0.041666666666666664,"killers":["io.FirstNonEmptyLinesTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[51],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[57],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE"},"weight":0.008333333333333333,"killers":["io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[50],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.004629629629629629,"killers":["io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[82],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator"},"weight":0.041666666666666664,"killers":["io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[37],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[14],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator"},"weight":0.006944444444444444,"killers":["io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[41],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE"},"weight":0.004629629629629629,"killers":["io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[30],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[49],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[93],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator"},"weight":0.004629629629629629,"killers":["io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[24],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF"},"weight":0.008333333333333333,"killers":["io.WritePowersOfTwoTest.testZero","io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore","io.WritePowersOfTwoTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[57],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator"},"weight":0.005952380952380952,"killers":["io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[62],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.008333333333333333,"killers":["io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[63],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"extractNumbers","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[86],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator"},"weight":0.006944444444444444,"killers":["io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[35],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.004629629629629629,"killers":["io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding","io.FirstNonEmptyLinesTest.testCloseException"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[24],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[24],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"},"weight":0.006944444444444444,"killers":["io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[107],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[43],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"writePowersOfTwo","methodDesc":"(Ljava/io/OutputStream;I)V"},"indexes":[43],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator"},"weight":0.006944444444444444,"killers":["io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore","io.WritePowersOfTwoTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"positive","methodDesc":"()Z"},"indexes":[5],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator"},"weight":0.010416666666666666,"killers":["io.ReadPeopleFromCsvTest.testPositive"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[58],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.005952380952380952,"killers":["io.FirstNonEmptyLinesTest.testZero","io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testTooFew","io.FirstNonEmptyLinesTest.testEncoding","io.FirstNonEmptyLinesTest.testClose","io.FirstNonEmptyLinesTest.testCloseException","io.ExtractNumbersTest.testEmptyText","io.ExtractNumbersTest.testNoNumbers","io.ExtractNumbersTest.testInts","io.ExtractNumbersTest.testDoubles","io.ExtractNumbersTest.testNegative","io.ExtractNumbersTest.testClose","io.WritePowersOfTwoTest.testZero","io.WritePowersOfTwoTest.testOne","io.WritePowersOfTwoTest.testMore","io.WritePowersOfTwoTest.testClose","io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":1,"identifier":{"location":{"className":{"name":"io/Person"},"methodName":"<init>","methodDesc":"(Ljava/lang/String;IZ)V"},"indexes":[27],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator"},"weight":0.013888888888888888,"killers":["io.ReadPeopleFromCsvTest.testAge"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[35],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[41],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF"},"weight":0.041666666666666664,"killers":["io.FirstNonEmptyLinesTest.testTooFew"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"firstNonEmptyLines","methodDesc":"(Ljava/io/InputStream;I)Ljava/util/List;"},"indexes":[45],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator"},"weight":0.005952380952380952,"killers":["io.FirstNonEmptyLinesTest.testZero","io.FirstNonEmptyLinesTest.testOne","io.FirstNonEmptyLinesTest.testBasic","io.FirstNonEmptyLinesTest.testEmptyLines","io.FirstNonEmptyLinesTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[71],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator"},"weight":0.013888888888888888,"killers":["io.ReadPeopleFromCsvTest.testAge"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[49],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[36],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator"},"weight":0.002777777777777778,"killers":["io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding"]},{"refImplementationIndex":0,"mutatedClassIndex":0,"identifier":{"location":{"className":{"name":"io/IOTasks"},"methodName":"readPeopleFromCsv","methodDesc":"(Ljava/io/InputStream;)Ljava/util/List;"},"indexes":[23],"mutator":"org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator"},"weight":0.004166666666666667,"killers":["io.ReadPeopleFromCsvTest.testEmpty","io.ReadPeopleFromCsvTest.testName","io.ReadPeopleFromCsvTest.testNonEmpty","io.ReadPeopleFromCsvTest.testAge","io.ReadPeopleFromCsvTest.testPositive","io.ReadPeopleFromCsvTest.testEncoding","io.ReadPeopleFromCsvTest.testClose"]}],"refTestDescriptions":{"io.WritePowersOfTwoTest.testMore":"`writePowersOfTwo` mit verschiedenen `n` aufrufen und prüfen, dass die ersten `n` Zweierpotenzen geschrieben werden.","io.ReadPeopleFromCsvTest.testName":"`readPeopleFromCsv` mit einem Text aufrufen, der mehrere Zeilen enthält, und prüfen, dass die Namen der zurückgegebenen Personen stimmen.","io.FirstNonEmptyLinesTest.testEmptyLines":"`firstNonEmptyLines` mit einem Text aufrufen, der leere Zeilen enthält, und prüfen, dass die leeren Zeilen ignoriert werden.","io.ReadPeopleFromCsvTest.testNonEmpty":"`readPeopleFromCsv` mit einem Text aufrufen, der mehrere Zeilen enthält, und prüfen, dass die Anzahl der zurückgegebenen Personen stimmt.","io.ReadPeopleFromCsvTest.testEmpty":"`readPeopleFromCsv` mit einem Text aufrufen, der nur den Header enthält, und prüfen, dass eine leere Liste zurückgegeben wird.","io.ExtractNumbersTest.testDoubles":"`extractNumbers` mit einem Text aufrufen, der reelle Zahlen enthält, und prüfen, dass die Zahlen in der richtigen Reihenfolge zurückgegeben werden.","io.FirstNonEmptyLinesTest.testCloseException":"Prüfen, dass `firstNonEmptyLines` den übergebenen InputStream schliesst, auch wenn eine Exception auftritt.","io.WritePowersOfTwoTest.testZero":"`writePowersOfTwo` mit `n = 0` aufrufen und prüfen, dass nichts geschrieben wird.","io.FirstNonEmptyLinesTest.testClose":"Prüfen, dass `firstNonEmptyLines` den übergebenen InputStream schliesst.","io.FirstNonEmptyLinesTest.testEncoding":"`firstNonEmptyLines` mit einem Text aufrufen, der Nicht-ASCII-Zeichen enthält, und prüfen, dass die Zeichen korrekt decodiert werden.","io.ReadPeopleFromCsvTest.testAge":"`readPeopleFromCsv` mit einem Text aufrufen, der mehrere Zeilen enthält, und prüfen, dass die Altersangaben stimmen.","io.ExtractNumbersTest.testNegative":"`extractNumbers` mit einem Text aufrufen, der negative Zahlen enthält, und prüfen, dass die Zahlen in der richtigen Reihenfolge zurückgegeben werden.","io.FirstNonEmptyLinesTest.testOne":"`firstNonEmptyLines` mit `n = 1` aufrufen und prüfen, dass die erste (nicht-leere) Zeile zurückgegeben wird.","io.ExtractNumbersTest.testClose":"Prüfen, dass `extractNumbers` den übergebenen InputStream schliesst.","io.FirstNonEmptyLinesTest.testZero":"`firstNonEmptyLines` mit `n = 0` aufrufen und prüfen, dass eine leere Liste zurückgegeben wird.","io.ReadPeopleFromCsvTest.testPositive":"`readPeopleFromCsv` mit einem Text aufrufen, der mehrere Zeilen enthält, und prüfen, dass die \\"positiv\\"-Angaben stimmen.","io.WritePowersOfTwoTest.testOne":"`writePowersOfTwo` mit `n = 1` aufrufen und prüfen, dass die Zahl 1 geschrieben wird.","io.FirstNonEmptyLinesTest.testBasic":"`firstNonEmptyLines` mit verschiedenen `n` aufrufen und prüfen, dass entsprechend viele (nicht-leere) Zeilen zurückgegeben werden.","io.ExtractNumbersTest.testNoNumbers":"`extractNumbers` mit einem Text aufrufen, der keine Zahlen enthält, und prüfen, dass eine leere Liste zurückgegeben wird.","io.FirstNonEmptyLinesTest.testTooFew":"`firstNonEmptyLines` mit einem Text aufrufen, der weniger als `n` Zeilen enthält, und prüfen, dass alle Zeilen zurückgegeben werden.","io.ReadPeopleFromCsvTest.testEncoding":"`readPeopleFromCsv` mit einem Text aufrufen, der nicht-ASCII-Zeichen enthält, und prüfen, dass die Namen der zurückgegebenen Personen richtig decodiert werden.","io.ExtractNumbersTest.testEmptyText":"`extractNumbers` mit einem leeren Text aufrufen und prüfen, dass eine leere Liste zurückgegeben wird.","io.ExtractNumbersTest.testInts":"`extractNumbers` mit einem Text aufrufen, der ganze Zahlen enthält, und prüfen, dass die Zahlen in der richtigen Reihenfolge zurückgegeben werden.","io.WritePowersOfTwoTest.testClose":"Prüfen, dass `writePowersOfTwo` den übergebenen OutputStream schliesst.","io.ReadPeopleFromCsvTest.testClose":"Prüfen, dass `readPeopleFromCsv` den übergebenen InputStream schliesst."}}
                """;
        var task = new DBObjectMapperSupplier().get().readValue(taskJson, TestSuiteGrader.Task.class);
        var projectConfig = new ProjectConfig("io-tasks", ECLIPSE, null, emptyList());
        var gradingConfig = new TestSuiteGradingConfig(task);
        var problemSet = new ProblemSet(course, "I/O Tasks", projectConfig, gradingConfig,
                now(), WITH_SHORTENED_NAMES);
        var solution = new Solution(problemSet, "https://gitlab.com/rolve/some-private-repo.git",
                "master", token, emptyList(), emptyList());
        var submission = new Submission(solution, "34a37583c60b20fa347f46827fa2025e630ee0d2",
                now());
        submissionRepo.save(submission);

        service.grade(submission).get();

        var result = assertInstanceOf(TestSuiteGradingResult.class, submission.getResult());
        assertFalse(result.testSuiteResult().emptyTestSuite());
        assertFalse(result.testSuiteResult().compilationFailed());
        assertEquals(0.5, result.testSuiteResult().mutantScore(), 0.001); // test suite covers half the tasks/tests

        assertEquals(9, result.implResult().passedTests().size()); // implementation passes 9/12 of the submitted tests
        assertEquals(3, result.implResult().failedTests().size());
        assertEquals(0.75, result.implResult().passedTestsRatio(), 0.001);
    }
}
